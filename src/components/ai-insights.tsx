import { IconBrain, IconBulb, IconRobot, IconTrendingUp, IconExternalLink, IconInfoCircle, IconCircleCheck, IconAlertTriangle, IconInfoCircleFilled } from "@tabler/icons-react"

import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import {
  Card,
  CardAction,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
  CardContent,
} from "@/components/ui/card"
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip"
import { Progress } from "@/components/ui/progress"

export function AIInsights() {
  // This would typically come from an API or context in a real app
  const insights = [
    {
      id: 1,
      title: "Load balancing needed on Panel C",
      description: "High probability of system overload within 24 hours",
      confidence: 94,
      impact: "High",
      timestamp: "10 min ago",
      type: "alert"
    },
    {
      id: 2,
      title: "Anomalous temperature pattern detected",
      description: "Cyclic temperature spikes indicate potential cooling failure",
      confidence: 87,
      impact: "Medium",
      timestamp: "1 hr ago",
      type: "alert"
    },
    {
      id: 3,
      title: "Predictive maintenance recommended",
      description: "Historical data suggests component failure within 2 weeks",
      confidence: 81,
      impact: "Medium",
      timestamp: "3 hrs ago",
      type: "recommendation"
    },
    {
      id: 4,
      title: "Humidity optimization achieved",
      description: "AI-controlled dehumidifier settings successfully optimized",
      confidence: 98,
      impact: "Low",
      timestamp: "5 hrs ago",
      type: "success"
    },
    {
      id: 5,
      title: "Unusual network traffic pattern",
      description: "Potential security concern in IoT gateway communications",
      confidence: 76,
      impact: "Medium",
      timestamp: "6 hrs ago",
      type: "alert"
    }
  ]

  // Calculate model accuracy based on historic predictions
  const modelAccuracy = 92.8;

  return (
    <Card className="@container/card overflow-hidden border-l-4 border-l-purple-500 w-full h-full flex flex-col">
      <CardHeader className="pb-2">
        <div className="flex items-center justify-between">
          <CardDescription className="flex items-center gap-1 text-sm font-medium">
            <IconBrain className="size-4 text-purple-500" /> AI Insights
          </CardDescription>
          <TooltipProvider>
            <Tooltip>
              <TooltipTrigger asChild>
                <Button variant="ghost" size="sm" className="h-6 w-6 p-0">
                  <IconInfoCircle className="h-4 w-4" />
                  <span className="sr-only">Info</span>
                </Button>
              </TooltipTrigger>
              <TooltipContent>
                <p className="max-w-xs text-xs">
                  Real-time insights generated by our advanced AI model based on current and historical sensor data.
                </p>
              </TooltipContent>
            </Tooltip>
          </TooltipProvider>
        </div>
      </CardHeader>
      <CardContent className="px-6 py-0 flex-1 overflow-auto">
        <div className="flex flex-col divide-y">
          {insights.map((insight) => (
            <div key={insight.id} className="py-3">
              <div className="flex items-start gap-3">
                <div className={`mt-1 shrink-0 rounded-full p-1.5 ${
                  insight.type === "alert" && insight.impact === "High"
                    ? "bg-red-100 text-red-500" 
                    : insight.type === "alert"
                    ? "bg-amber-100 text-amber-500"
                    : insight.type === "success"
                    ? "bg-green-100 text-green-500"
                    : "bg-blue-100 text-blue-500"
                }`}>
                  {insight.type === "alert" ? (
                    <IconAlertTriangle className="size-4" />
                  ) : insight.type === "success" ? (
                    <IconCircleCheck className="size-4" />
                  ) : (
                    <IconBulb className="size-4" />
                  )}
                </div>
                <div className="min-w-0 flex-1">
                  <div className="flex items-center justify-between">
                    <p className="font-medium">{insight.title}</p>
                    <Badge variant="outline" className={`ml-2 text-xs ${
                      insight.confidence > 90 ? "bg-green-50 text-green-700 border-green-200" : 
                      insight.confidence > 80 ? "bg-blue-50 text-blue-700 border-blue-200" :
                      "bg-amber-50 text-amber-700 border-amber-200"
                    }`}>
                      {insight.confidence}% confidence
                    </Badge>
                  </div>
                  <p className="mt-0.5 text-muted-foreground text-sm">{insight.description}</p>
                  <div className="mt-1.5 flex items-center text-xs text-muted-foreground">
                    <span>{insight.timestamp}</span>
                    <span className="mx-1">â€¢</span>
                    <span className={`font-medium ${
                      insight.impact === "High" ? "text-red-500" : 
                      insight.impact === "Medium" ? "text-amber-500" : 
                      "text-green-500"
                    }`}>{insight.impact} impact</span>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </CardContent>
      <CardFooter className="flex flex-col gap-2 items-start text-sm mt-auto">
        <div className="flex justify-between w-full items-center">
          <div className="flex items-center gap-1.5 text-purple-500">
            <IconRobot className="size-4" />
            <span className="font-medium">Model: Safety Predictor v2.1</span>
          </div>
          <Button variant="ghost" size="sm" className="h-7 px-2 text-xs">
            View All Insights <IconExternalLink className="ml-1 size-3" />
          </Button>
        </div>
        <div className="w-full">
          <div className="flex justify-between text-xs mb-1 mt-1">
            <span className="text-muted-foreground">Model accuracy</span>
            <span className="font-medium text-green-600">{modelAccuracy}%</span>
          </div>
          <Progress value={modelAccuracy} max={100} className="h-1.5"
            indicatorClassName="bg-gradient-to-r from-purple-500 to-blue-500" />
        </div>
      </CardFooter>
    </Card>
  )
} 